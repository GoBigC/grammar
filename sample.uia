// Basic variable declarations
int x = 5;
float y = 3.14;
char c = 'a';
bool isTrue = true;
const int MAX_SIZE = 100;

// Function declaration with parameters
int calculateSum(int a, int b) {
    return a + b;
}

// Function with multiple statements and local variables
float calculateAverage(int values[], int count) {
    int sum = 0;
    int i = 0;
    
    while (i < count) {
        sum = sum + values[i];
        i = i + 1;
    }
    
    if (count == 0) {
        return 0.0;
    } else {
        return sum / count;
    }
}

// Nested if statements demonstrating the dangling else handling
void testIf(int x) {
    if (x > 10)
        if (x > 20)
            return;
        else
            x = 20;  // This else belongs to the second if
    
    // More complex nested if with blocks
    if (x > 0) {
        if (x > 5) {
            x = x - 5;
        } else {
            x = 0;
        }
    } else {
        x = 0;
    }
}

// Examples of expressions
void expressions() {
    int a = 5;
    int b = 10;
    int c;
    
    // Assignment expressions
    c = a + b;
    c += a;
    c -= b;
    
    // Arithmetic expressions
    c = a + b * 3 / 2 - 1;
    c = (a + b) * (3 / 2);
    
    // Logical expressions
    bool result = a > b || a == 5 && b <= 10;
    
    // Unary operations
    c = -a;
    c = !b;
    
    // Increment/decrement
    a++;
    ++b;
    c = a++ + ++b;
    
    // Function calls
    c = calculateSum(a, b);
}

// While loop with complex condition
void countDown(int start) {
    while (start > 0 && start <= 100) {
        if (start % 10 == 0) {
            // Checkpoint
            int temp = start / 10;
            start = start - 1;
        } else {
            start = start - 1;
        }
    }
}

// Main function (entry point)
int main() {
    // Array usage
    int numbers[5];
    numbers[0] = 1;
    numbers[1] = 2;
    numbers[2] = 3;
    numbers[3] = 4;
    numbers[4] = 5;
    
    float avg = calculateAverage(numbers, 5);
    
    // Demonstrate complex if structure
    if (avg > 3.0) {
        if (numbers[0] == 1) {
            avg = avg + 1.0;
        }
    } else if (avg > 2.0) {
        avg = avg + 0.5;
    } else {
        avg = 0.0;
    }
    
    return 0;
}